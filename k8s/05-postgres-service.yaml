# ===========================================
# SERVICE - Expõe o PostgreSQL internamente
# ===========================================

apiVersion: v1
kind: Service
metadata:
  # Nome do Service (usado como hostname interno)
  name: postgres-service
  
  # Namespace onde será criado
  namespace: vehicle-sales
  
  # Labels para organização
  labels:
    app: postgres
    component: database
    tier: data
  
  # Annotations para configurações específicas
  annotations:
    description: "Service interno para PostgreSQL"

spec:
  # ===========================================
  # Tipo do Service
  # ===========================================
  # ClusterIP = acessível apenas dentro do cluster (padrão)
  # NodePort = acessível via porta do node
  # LoadBalancer = cria load balancer externo (cloud)
  # ExternalName = mapeia para DNS externo
  type: ClusterIP
  
  # ===========================================
  # Seletor de Pods
  # ===========================================
  # Define quais pods receberão tráfego deste service
  selector:
    app: postgres
    component: database
  
  # ===========================================
  # Portas
  # ===========================================
  ports:
    - name: postgres           # Nome da porta (referência)
      port: 5432              # Porta do Service
      targetPort: 5432        # Porta do Container
      protocol: TCP           # Protocolo (TCP/UDP/SCTP)
      
      # NodePort específico (apenas se type: NodePort)
      # nodePort: 30432
  
  # ===========================================
  # Session Affinity 
  # ===========================================
  # None = requisições distribuídas entre pods
  # ClientIP = requisições do mesmo IP vão pro mesmo pod
  sessionAffinity: None
  
  # Timeout da sessão (se usar ClientIP)
  # sessionAffinityConfig:
  #   clientIP:
  #     timeoutSeconds: 10800  # 3 horas
  
  # ===========================================
  # Configurações Adicionais 
  # ===========================================
  
  # IP do cluster (deixe vazio para auto-atribuição)
  # clusterIP: ""
  
  # IPs externos que roteiam para este service
  # externalIPs:
  #   - 192.168.1.100
  
  # Tráfego externo policy (se type: LoadBalancer/NodePort)
  # externalTrafficPolicy: Cluster  # ou Local
  
  # Health check do load balancer (se type: LoadBalancer)
  # healthCheckNodePort: 30000
  
  # Load balancer IP específico (se type: LoadBalancer)
  # loadBalancerIP: "40.121.183.52"
  
  # Restringe acesso ao load balancer (se type: LoadBalancer)
  # loadBalancerSourceRanges:
  #   - "10.0.0.0/8"
  #   - "192.168.0.0/16"
  
  # Publica endpoints mesmo se não prontos
  # publishNotReadyAddresses: false