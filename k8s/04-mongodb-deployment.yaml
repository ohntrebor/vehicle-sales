# ===========================================
# DEPLOYMENT - MongoDB Database
# ===========================================

apiVersion: apps/v1
kind: Deployment
metadata:
  # Nome do Deployment
  name: mongodb
  
  # Namespace onde será criado
  namespace: vehicle-sales
  
  # Labels para organização e seleção
  labels:
    app: mongodb
    component: database
    tier: data
    version: "7"

spec:
  # ===========================================
  # Configuração de Réplicas
  # ===========================================
  # MongoDB básico suporta apenas 1 réplica
  # Para HA, use MongoDB Replica Set ou operadores
  replicas: 1
  
  # ===========================================
  # Estratégia de Update
  # ===========================================
  strategy:
    # Recreate = derruba o pod antigo antes de criar o novo
    # RollingUpdate = cria novo pod antes de derrubar o antigo
    type: Recreate  # Banco de dados deve usar Recreate
  
  # ===========================================
  # Seletor de Pods
  # ===========================================
  # Define quais pods este Deployment gerencia
  selector:
    matchLabels:
      app: mongodb
      component: database
  
  # ===========================================
  # Template do Pod
  # ===========================================
  template:
    metadata:
      # Labels do Pod (devem corresponder ao selector)
      labels:
        app: mongodb
        component: database
        tier: data
    
    spec:
      # ===========================================
      # Containers
      # ===========================================
      containers:
        - name: mongodb
          
          # Imagem do MongoDB
          # 7-jammy = versão 7 com Ubuntu Jammy (recomendado)
          # 7 = versão 7 com Debian (maior, mais ferramentas)
          # latest = última versão (não use em produção!)
          image: mongo:7-jammy
          
          # Política de pull da imagem
          # Always = sempre baixa a imagem
          # IfNotPresent = baixa apenas se não existir
          # Never = nunca baixa, usa local
          imagePullPolicy: IfNotPresent
          
          # ===========================================
          # Portas
          # ===========================================
          ports:
            - containerPort: 27017     # Porta padrão do MongoDB
              name: mongodb            # Nome da porta para referência
              protocol: TCP            # Protocolo TCP
          
          # ===========================================
          # Variáveis de Ambiente
          # ===========================================
          env:
            # Usuário administrador root do MongoDB
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vehicle-sales-secrets
                  key: db-username
            
            # Senha do usuário administrador root
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vehicle-sales-secrets
                  key: db-password
            
            # Nome do banco de dados inicial
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: vehicle-sales-secrets
                  key: db-name
            
            # Configurações de performance (opcional)
            # - name: MONGO_INITDB_ARGS
            #   value: "--auth"
            
            # Configurações adicionais (opcional)
            # - name: MONGODB_DISABLE_SYSTEM_LOG
            #   value: "false"  # Habilita logs do sistema
          
          # ===========================================
          # Volumes
          # ===========================================
          volumeMounts:
            # Volume para dados persistentes
            - name: mongodb-storage
              mountPath: /data/db
            
            # Volume para scripts de inicialização (opcional)
            # - name: init-scripts
            #   mountPath: /docker-entrypoint-initdb.d
            #   readOnly: true
          
          # ===========================================
          # Recursos
          # ===========================================
          resources:
            # Recursos mínimos garantidos
            requests:
              memory: "512Mi"   # 512MB RAM mínimo (MongoDB precisa mais que PostgreSQL)
              cpu: "250m"       # 0.25 CPU cores
            
            # Recursos máximos permitidos
            limits:
              memory: "2Gi"     # 2GB RAM máximo (MongoDB usa mais memória)
              cpu: "1000m"      # 1 CPU core máximo
          
          # ===========================================
          # Health Checks
          # ===========================================
          
          # Liveness Probe - verifica se o container está vivo
          # Se falhar, Kubernetes reinicia o container
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30    # Aguarda 30s após iniciar
            periodSeconds: 10          # Verifica a cada 10s
            timeoutSeconds: 5          # Timeout de 5s
            failureThreshold: 3        # Falha após 3 tentativas
            successThreshold: 1        # Sucesso após 1 tentativa OK
          
          # Readiness Probe - verifica se está pronto para receber tráfego
          # Se falhar, remove o pod do load balancer
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5     # Aguarda 5s após iniciar
            periodSeconds: 5           # Verifica a cada 5s
            timeoutSeconds: 3          # Timeout de 3s
            failureThreshold: 3        # Falha após 3 tentativas
            successThreshold: 1        # Sucesso após 1 tentativa OK
          
          # Startup Probe - verifica inicialização lenta (opcional)
          # startupProbe:
          #   exec:
          #     command:
          #       - mongosh
          #       - --eval
          #       - "db.adminCommand('ping')"
          #   initialDelaySeconds: 0
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 30    # Permite até 5 minutos para iniciar
      
      # ===========================================
      # Volumes
      # ===========================================
      volumes:
        # Volume persistente para dados
        - name: mongodb-storage
          persistentVolumeClaim:
            claimName: mongodb-pvc
        
        # Volume para scripts de inicialização (opcional)
        # - name: init-scripts
        #   configMap:
        #     name: mongodb-init-scripts